'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.TemplateNotFound=exports.CommandNotFound=exports.CommandFailure=exports.DirectoryConflict=exports.InvalidVersion=exports.AppNameConflict=exports.InvalidNpmName=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _rearError=require('rear-core/rear-error');var _rearError2=_interopRequireDefault(_rearError);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class InvalidNpmName extends _rearError2.default{constructor(message){super(message,{code:'ENAMENPMINVALID',description:'App name is not a valid npm package name.',errno:312})}}exports.InvalidNpmName=InvalidNpmName;class AppNameConflict extends _rearError2.default{constructor(message,props){super(message,_extends({code:'ENAMECONFLICT',errno:323,description:'A dependency with the same name already exists.'},props));this.dependencies=props.dependencies}}exports.AppNameConflict=AppNameConflict;class InvalidVersion extends _rearError2.default{constructor(props){const message=`The ${props.program} version ${props.version} `+`you are using is unsupported.`;super(message,_extends({code:'EINVALIDVERSION',description:message,errno:337},props));this.program=this.props.program;this.minVersion=this.props.minVersion;this.version=this.props.version}}exports.InvalidVersion=InvalidVersion;;class DirectoryConflict extends _rearError2.default{constructor(message,props){super(message,_extends({code:'EDIRCONFLICT',description:`The directory ${props.directory} contains files that could conflict`,errno:348},props));this.directory=props.directory;this.conflicts=props.conflicts}}exports.DirectoryConflict=DirectoryConflict;class CommandFailure extends _rearError2.default{constructor(props){const message=`${props.command} failed with exit code ${props.exitCode}.`;super(message,_extends({code:'ECMDFAILURE',description:message,errno:500},props));this.command=this.props.command}}exports.CommandFailure=CommandFailure;class CommandNotFound extends _rearError2.default{constructor(command,suggestion){let message=`Command ${JSON.stringify(command)} not found.`;if(suggestion){message+=` Did you mean ${JSON.stringify(suggestion)}?`}super(message,{code:'ECMDNOTFOUND',description:message,errno:405,suggestion})}}exports.CommandNotFound=CommandNotFound;class TemplateNotFound extends _rearError2.default{constructor(packageName,templatePath){const message=`Cannot find ${packageName} template at path ${templatePath}`;super(message,{templatePath,packageName});this.package=packageName;this.template=templatePath}}exports.TemplateNotFound=TemplateNotFound;